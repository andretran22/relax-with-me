{"version":3,"sources":["components/FramerContants.js","components/Home/Home.js","components/Relax/Relax.js","components/About/About.js","components/Relax/SongMenu/SongMenu.js","components/Navbar/Navbar.js","components/App/App.js","extra/serviceWorker.js","index.js"],"names":["defaultVariant","initial","opacity","x","scale","in","out","defualtTransition","type","ease","duration","styleAbsolute","position","display","justifyContent","alignItems","height","width","Home","div","style","animate","exit","variants","transition","Container","className","Row","Relax","Button","as","NavLink","to","About","SongMenu","variant","Toolbar","Navbar","fixed","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","exact","App","location","useLocation","key","pathname","hideToolBar","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d9c292e.chunk.js","sourcesContent":["// import { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nexport const defaultVariant = {\r\n  initial: {\r\n    opacity: 0,\r\n    x: \"-100vw\",\r\n    scale: 0.8,\r\n  },\r\n  in: {\r\n    opacity: 1,\r\n    x: 0,\r\n    scale: 1,\r\n  },\r\n  out: {\r\n    opacity: 0,\r\n    x: \"100vw\",\r\n    scale: 1,\r\n  },\r\n};\r\n\r\nexport const defualtTransition = {\r\n  // transition: \"linear\",\r\n  // type: \"spring\",\r\n  // stiffness: 100,\r\n  type: \"tween\",\r\n  ease: \"anticipate\",\r\n  duration: 1,\r\n};\r\n\r\nexport const styleAbsolute = {\r\n  position: \"absolute\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  height: \"100vh\",\r\n  width: \"100vw\"\r\n}","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  defaultVariant,\r\n  defualtTransition,\r\n  styleAbsolute,\r\n} from \"../FramerContants\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <motion.div\r\n      style={styleAbsolute}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={defaultVariant}\r\n      transition={defualtTransition}\r\n    >\r\n      <Container className=\"center-page\">\r\n      <Row>\r\n        <h1>Home</h1>\r\n      </Row>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport Container  from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  defaultVariant,\r\n  defualtTransition,\r\n  styleAbsolute,\r\n} from \"../FramerContants\";\r\n\r\nimport \"./Relax.css\";\r\n\r\nconst Relax = () => {\r\n  return (\r\n    <motion.div\r\n      style={styleAbsolute}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={defaultVariant}\r\n      transition={defualtTransition}\r\n    >\r\n      <Container className=\"contain\">\r\n      <Row>\r\n        <Button as={NavLink} to=\"/relax/song-menu\">\r\n          Song Menu\r\n        </Button>\r\n      </Row>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Relax;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  defaultVariant,\r\n  defualtTransition,\r\n  styleAbsolute,\r\n} from \"../FramerContants\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <motion.div\r\n      style={styleAbsolute}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={defaultVariant}\r\n      transition={defualtTransition}\r\n    >\r\n      <Container className=\"center-page\">\r\n        <Row>\r\n          <h1>About</h1>\r\n        </Row>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  defaultVariant,\r\n  defualtTransition,\r\n  styleAbsolute,\r\n} from \"../../FramerContants\";\r\n\r\nimport \"./SongMenu.css\";\r\n\r\nconst SongMenu = () => {\r\n  return (\r\n    <motion.div\r\n      style={styleAbsolute}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={defaultVariant}\r\n      transition={defualtTransition}\r\n    >\r\n      <Container className=\"song-menu\">\r\n        <Row>\r\n          <Button variant=\"link\" as={NavLink} to=\"/relax\">\r\n            Go Back\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SongMenu;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { NavLink} from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Toolbar = () => {\r\n  return  (\r\n    <Navbar className=\"toolbar\" fixed=\"top\" bg=\"light\" expand=\"sm\">\r\n      <Navbar.Brand  as={NavLink} to=\"/\">Relax With Me</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link as={NavLink} exact to=\"/\">Home</Nav.Link>\r\n          <Nav.Link as={NavLink} to=\"/relax\">Relax</Nav.Link>\r\n          <Nav.Link as={NavLink} to=\"/about\">About</Nav.Link>\r\n        </Nav>\r\n        \r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nimport Home from \"../Home/Home\";\r\nimport Relax from \"../Relax/Relax\";\r\nimport About from \"../About/About\";\r\nimport SongMenu from \"../Relax/SongMenu/SongMenu\";\r\n\r\nimport Toolbar from \"../Navbar/Navbar\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  let location = useLocation();\r\n  let key = location.pathname;\r\n  let hideToolBar = key === \"/relax/song-menu\";\r\n\r\n  return (\r\n    <div className=\"full-height\">\r\n\r\n      {/* Toolbar */}\r\n      {hideToolBar ? null : <Toolbar/>}\r\n\r\n      {/* pages/routes */}\r\n      <main className=\"main-page\">\r\n      <AnimatePresence >\r\n        <Switch location={location} key={key}>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/relax\" component={Relax} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/relax/song-menu\" component={SongMenu} />\r\n        </Switch>\r\n      </AnimatePresence>\r\n      </main>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport BrowserRouter from \"react-router-dom/BrowserRouter\";\r\nimport * as serviceWorker from \"./extra/serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}